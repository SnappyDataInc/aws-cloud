#!/usr/bin/env bash
#
# Copyright (c) 2018 SnappyData, Inc. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you
# may not use this file except in compliance with the License. You
# may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
# implied. See the License for the specific language governing
# permissions and limitations under the License. See accompanying
# LICENSE file.
#

cat /etc/passwd > /tmp/passwd
echo "$(id -u):x:$(id -u):$(id -g):dynamic uid:/opt/snappydata:/bin/false" >> /tmp/passwd

export NSS_WRAPPER_PASSWD=/tmp/passwd
export NSS_WRAPPER_GROUP=/etc/group
export LD_PRELOAD=/usr/lib64/libnss_wrapper.so

echo "Starting sshd service"
service sshd start

HOSTNAME=`hostname`
PRODUCT_DIR=/opt/snappydata
WORK_DIR="$PRODUCT_DIR/work/$HOSTNAME"
mkdir -p "$WORK_DIR"

die() { echo "ERROR: $*" 1>&2; exit 1; }


case "$1" in
   "")
      echo "Usage: start (locator|server|lead|all) [extra config]"
      exit 1
      ;;
   locator)
      echo "$HOSTNAME -dir=$WORK_DIR ${@:2}" > ${PRODUCT_DIR}/conf/locators
      ${PRODUCT_DIR}/sbin/snappy-locators.sh start
      ;;
   server)
      COUNTER=0;
      while ! nc -z snappydata-locator-internal 10334 > /dev/null 2>&1; do
        echo "Waiting for locator to be online"
        sleep 5
        let COUNTER=COUNTER+1
        if [ ${COUNTER} -eq 50 ]; then
          echo "ERROR: Locator is not up"
          exit 1
        fi
      done
      echo "$HOSTNAME -dir=$WORK_DIR ${@:2}" > ${PRODUCT_DIR}/conf/servers
      ${PRODUCT_DIR}/sbin/snappy-servers.sh start
      ;;
   lead)
      COUNTER=0;
      while ! nc -z snappydata-server 1527 > /dev/null 2>&1; do
        echo "Waiting for servers to be online"
        sleep 5
        let COUNTER=COUNTER+1
        if [ ${COUNTER} -eq 50 ]; then
          echo "ERROR: Servers are not up"
          exit 1
        fi
      done
      KUBE_TOKEN=$(</var/run/secrets/kubernetes.io/serviceaccount/token)
      KUBE_CACERT="/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"
      KUBE_API_URL="https://kubernetes/api/v1/namespaces/default/services/snappydata-leader/status"
      success=1
      while [ ${success} != 0 ]
      do
        sleep 3s
        SERVICE_IP=`wget -O- -q --ca-certificate $KUBE_CACERT  --header "Authorization: Bearer $KUBE_TOKEN" ${KUBE_API_URL} | grep ip | grep -E -o "([0-9]{1,3}[\.]){3}[0-9]{1,3}"`
        success=$?
      done
      echo "SPARK_PUBLIC_DNS=$SERVICE_IP" >> ${PRODUCT_DIR}/conf/spark-env.sh
      echo "$HOSTNAME -dir=$WORK_DIR ${@:2}" > ${PRODUCT_DIR}/conf/leads
      ${PRODUCT_DIR}/sbin/snappy-leads.sh start
      ;;
   all)
      ${PRODUCT_DIR}/sbin/snappy-start-all.sh -client-bind-address=0.0.0.0 -prefer-netserver-ipaddress=true "${@:2}"
      ;;
   * )
   echo "Usage: start [locator|server|lead|all]"
   die "Invalid Argument"
esac


tail -f /dev/null

